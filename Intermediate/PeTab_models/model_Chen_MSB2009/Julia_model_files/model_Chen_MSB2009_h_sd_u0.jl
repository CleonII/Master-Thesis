#u[1] = c144, u[2] = c432, u[3] = c395, u[4] = c513, u[5] = c466, u[6] = c392, u[7] = c91, u[8] = c165, u[9] = c263, u[10] = c41, u[11] = c416, u[12] = c257, u[13] = c511, u[14] = c282, u[15] = c504, u[16] = c58, u[17] = c2, u[18] = c163, u[19] = c128, u[20] = c227, u[21] = c453, u[22] = c310, u[23] = c320, u[24] = c487, u[25] = c12, u[26] = c307, u[27] = c390, u[28] = c166, u[29] = c96, u[30] = c371, u[31] = c175, u[32] = c81, u[33] = c529, u[34] = c122, u[35] = c495, u[36] = c44, u[37] = c530, u[38] = c182, u[39] = c80, u[40] = c223, u[41] = c302, u[42] = c37, u[43] = c289, u[44] = c526, u[45] = c255, u[46] = c102, u[47] = c425, u[48] = c281, u[49] = c501, u[50] = c348, u[51] = c158, u[52] = c189, u[53] = c366, u[54] = c305, u[55] = c116, u[56] = c190, u[57] = c42, u[58] = c457, u[59] = c410, u[60] = c493, u[61] = c76, u[62] = c463, u[63] = c444, u[64] = c38, u[65] = c17, u[66] = c420, u[67] = c210, u[68] = c159, u[69] = c385, u[70] = c439, u[71] = c370, u[72] = c336, u[73] = c11, u[74] = c226, u[75] = c314, u[76] = c450, u[77] = c127, u[78] = c219, u[79] = c98, u[80] = c247, u[81] = c64, u[82] = c101, u[83] = c315, u[84] = c330, u[85] = c482, u[86] = c267, u[87] = c142, u[88] = c343, u[89] = c123, u[90] = c69, u[91] = c60, u[92] = c169, u[93] = c253, u[94] = c404, u[95] = c552, u[96] = c104, u[97] = c114, u[98] = c203, u[99] = c94, u[100] = c520, u[101] = c36, u[102] = c434, u[103] = c364, u[104] = c243, u[105] = c555, u[106] = c99, u[107] = c424, u[108] = c360, u[109] = c156, u[110] = c157, u[111] = c313, u[112] = c181, u[113] = c440, u[114] = c18, u[115] = c264, u[116] = c131, u[117] = c489, u[118] = c218, u[119] = c300, u[120] = c108, u[121] = c137, u[122] = c507, u[123] = c95, u[124] = c232, u[125] = c465, u[126] = c321, u[127] = c229, u[128] = c86, u[129] = c377, u[130] = c222, u[131] = c230, u[132] = c347, u[133] = c344, u[134] = c149, u[135] = c522, u[136] = c106, u[137] = c280, u[138] = c214, u[139] = c550, u[140] = c396, u[141] = c409, u[142] = c211, u[143] = c57, u[144] = c215, u[145] = c7, u[146] = c306, u[147] = c151, u[148] = c82, u[149] = c148, u[150] = c557, u[151] = c361, u[152] = c49, u[153] = c473, u[154] = c388, u[155] = c92, u[156] = c231, u[157] = c192, u[158] = c496, u[159] = c153, u[160] = c309, u[161] = c237, u[162] = c356, u[163] = c183, u[164] = c521, u[165] = c475, u[166] = c115, u[167] = c193, u[168] = c294, u[169] = c452, u[170] = c77, u[171] = c207, u[172] = c217, u[173] = c422, u[174] = c202, u[175] = c10, u[176] = c71, u[177] = c462, u[178] = c252, u[179] = c63, u[180] = c23, u[181] = c55, u[182] = c296, u[183] = c30, u[184] = c20, u[185] = c54, u[186] = c111, u[187] = c331, u[188] = c349, u[189] = c113, u[190] = c411, u[191] = c204, u[192] = c259, u[193] = c239, u[194] = c171, u[195] = c240, u[196] = c368, u[197] = c248, u[198] = c418, u[199] = c194, u[200] = c464, u[201] = c312, u[202] = c242, u[203] = c297, u[204] = c431, u[205] = c415, u[206] = c47, u[207] = c133, u[208] = c168, u[209] = c34, u[210] = c249, u[211] = c25, u[212] = c359, u[213] = c503, u[214] = c398, u[215] = c502, u[216] = c24, u[217] = c523, u[218] = c532, u[219] = c3, u[220] = c428, u[221] = c209, u[222] = c167, u[223] = c185, u[224] = c427, u[225] = c332, u[226] = c436, u[227] = c379, u[228] = c403, u[229] = c235, u[230] = c394, u[231] = c33, u[232] = c225, u[233] = c383, u[234] = c83, u[235] = c105, u[236] = c87, u[237] = c442, u[238] = c245, u[239] = c455, u[240] = c191, u[241] = c468, u[242] = c206, u[243] = c363, u[244] = c152, u[245] = c279, u[246] = c59, u[247] = c201, u[248] = c556, u[249] = c558, u[250] = c476, u[251] = c346, u[252] = c471, u[253] = c399, u[254] = c488, u[255] = c393, u[256] = c419, u[257] = c265, u[258] = c79, u[259] = c467, u[260] = c262, u[261] = c484, u[262] = c456, u[263] = c75, u[264] = c486, u[265] = c129, u[266] = c525, u[267] = c384, u[268] = c402, u[269] = c246, u[270] = c221, u[271] = c417, u[272] = c491, u[273] = c50, u[274] = c208, u[275] = c236, u[276] = c376, u[277] = c266, u[278] = c6, u[279] = c407, u[280] = c510, u[281] = c103, u[282] = c244, u[283] = c479, u[284] = c132, u[285] = c375, u[286] = c492, u[287] = c519, u[288] = c85, u[289] = c499, u[290] = c485, u[291] = c299, u[292] = c446, u[293] = c500, u[294] = c241, u[295] = c46, u[296] = c173, u[297] = c89, u[298] = c517, u[299] = c387, u[300] = c372, u[301] = c172, u[302] = c353, u[303] = c480, u[304] = c380, u[305] = c469, u[306] = c483, u[307] = c48, u[308] = c19, u[309] = c195, u[310] = c381, u[311] = c213, u[312] = c160, u[313] = c308, u[314] = c391, u[315] = c170, u[316] = c317, u[317] = c90, u[318] = c516, u[319] = c139, u[320] = c136, u[321] = c303, u[322] = c9, u[323] = c39, u[324] = c373, u[325] = c260, u[326] = c508, u[327] = c62, u[328] = c126, u[329] = c197, u[330] = c21, u[331] = c506, u[332] = c426, u[333] = c518, u[334] = c180, u[335] = c31, u[336] = c84, u[337] = c65, u[338] = c408, u[339] = c340, u[340] = c497, u[341] = c35, u[342] = c401, u[343] = c14, u[344] = c429, u[345] = c205, u[346] = c135, u[347] = c386, u[348] = c220, u[349] = c472, u[350] = c150, u[351] = c196, u[352] = c358, u[353] = c478, u[354] = c27, u[355] = c357, u[356] = c254, u[357] = c286, u[358] = c460, u[359] = c430, u[360] = c45, u[361] = c147, u[362] = c284, u[363] = c494, u[364] = c291, u[365] = c339, u[366] = c354, u[367] = c216, u[368] = c28, u[369] = c400, u[370] = c319, u[371] = c70, u[372] = c72, u[373] = c8, u[374] = c93, u[375] = c13, u[376] = c112, u[377] = c198, u[378] = c51, u[379] = c67, u[380] = c74, u[381] = c16, u[382] = c138, u[383] = c22, u[384] = c323, u[385] = c338, u[386] = c367, u[387] = c382, u[388] = c268, u[389] = c141, u[390] = c124, u[391] = c448, u[392] = c447, u[393] = c374, u[394] = c509, u[395] = c52, u[396] = c301, u[397] = c551, u[398] = c228, u[399] = c88, u[400] = c362, u[401] = c125, u[402] = c490, u[403] = c421, u[404] = c61, u[405] = c365, u[406] = c162, u[407] = c68, u[408] = c474, u[409] = c130, u[410] = c66, u[411] = c412, u[412] = c161, u[413] = c324, u[414] = c164, u[415] = c15, u[416] = c528, u[417] = c389, u[418] = c224, u[419] = c449, u[420] = c435, u[421] = c337, u[422] = c154, u[423] = c143, u[424] = c481, u[425] = c311, u[426] = c26, u[427] = c184, u[428] = c355, u[429] = c531, u[430] = c117, u[431] = c341, u[432] = c53, u[433] = c512, u[434] = c4, u[435] = c405, u[436] = c73, u[437] = c145, u[438] = c199, u[439] = c238, u[440] = c350, u[441] = c233, u[442] = c5, u[443] = c454, u[444] = c438, u[445] = c287, u[446] = c97, u[447] = c258, u[448] = c304, u[449] = c250, u[450] = c283, u[451] = c335, u[452] = c146, u[453] = c269, u[454] = c288, u[455] = c322, u[456] = c461, u[457] = c351, u[458] = c176, u[459] = c325, u[460] = c251, u[461] = c56, u[462] = c316, u[463] = c451, u[464] = c369, u[465] = c78, u[466] = c212, u[467] = c174, u[468] = c477, u[469] = c200, u[470] = c121, u[471] = c437, u[472] = c261, u[473] = c445, u[474] = c100, u[475] = c470, u[476] = c109, u[477] = c553, u[478] = c397, u[479] = c290, u[480] = c234, u[481] = c554, u[482] = c293, u[483] = c140, u[484] = c524, u[485] = c155, u[486] = c134, u[487] = c527, u[488] = c378, u[489] = c505, u[490] = c40, u[491] = c318, u[492] = c32, u[493] = c256, u[494] = c43, u[495] = c498, u[496] = c107, u[497] = c345, u[498] = c29, u[499] = c110, u[500] = c433
#θ_dynamicNames[1] = k101, θ_dynamicNames[2] = k102, θ_dynamicNames[3] = k103, θ_dynamicNames[4] = k105, θ_dynamicNames[5] = k106, θ_dynamicNames[6] = k106b, θ_dynamicNames[7] = k107, θ_dynamicNames[8] = k109, θ_dynamicNames[9] = k10b, θ_dynamicNames[10] = k110, θ_dynamicNames[11] = k112, θ_dynamicNames[12] = k114, θ_dynamicNames[13] = k117, θ_dynamicNames[14] = k120, θ_dynamicNames[15] = k120b, θ_dynamicNames[16] = k15, θ_dynamicNames[17] = k16, θ_dynamicNames[18] = k17, θ_dynamicNames[19] = k18, θ_dynamicNames[20] = k19, θ_dynamicNames[21] = k1d, θ_dynamicNames[22] = k2, θ_dynamicNames[23] = k20, θ_dynamicNames[24] = k21, θ_dynamicNames[25] = k22, θ_dynamicNames[26] = k23, θ_dynamicNames[27] = k25, θ_dynamicNames[28] = k28, θ_dynamicNames[29] = k29, θ_dynamicNames[30] = k2b, θ_dynamicNames[31] = k32, θ_dynamicNames[32] = k33, θ_dynamicNames[33] = k34, θ_dynamicNames[34] = k35, θ_dynamicNames[35] = k36, θ_dynamicNames[36] = k37, θ_dynamicNames[37] = k4, θ_dynamicNames[38] = k40, θ_dynamicNames[39] = k41, θ_dynamicNames[40] = k42, θ_dynamicNames[41] = k44, θ_dynamicNames[42] = k48, θ_dynamicNames[43] = k50, θ_dynamicNames[44] = k52, θ_dynamicNames[45] = k56, θ_dynamicNames[46] = k58, θ_dynamicNames[47] = k6, θ_dynamicNames[48] = k60, θ_dynamicNames[49] = k60b, θ_dynamicNames[50] = k60c, θ_dynamicNames[51] = k61, θ_dynamicNames[52] = k62b, θ_dynamicNames[53] = k64, θ_dynamicNames[54] = k66, θ_dynamicNames[55] = k67, θ_dynamicNames[56] = k69, θ_dynamicNames[57] = k7, θ_dynamicNames[58] = k70, θ_dynamicNames[59] = k73, θ_dynamicNames[60] = k74, θ_dynamicNames[61] = k8, θ_dynamicNames[62] = k8b, θ_dynamicNames[63] = k94, θ_dynamicNames[64] = k94b, θ_dynamicNames[65] = k96, θ_dynamicNames[66] = kd10, θ_dynamicNames[67] = kd100, θ_dynamicNames[68] = kd101, θ_dynamicNames[69] = kd102, θ_dynamicNames[70] = kd103, θ_dynamicNames[71] = kd104, θ_dynamicNames[72] = kd105, θ_dynamicNames[73] = kd106, θ_dynamicNames[74] = kd106b, θ_dynamicNames[75] = kd107, θ_dynamicNames[76] = kd108, θ_dynamicNames[77] = kd109, θ_dynamicNames[78] = kd110, θ_dynamicNames[79] = kd111, θ_dynamicNames[80] = kd112, θ_dynamicNames[81] = kd113, θ_dynamicNames[82] = kd114, θ_dynamicNames[83] = kd115, θ_dynamicNames[84] = kd117, θ_dynamicNames[85] = kd118, θ_dynamicNames[86] = kd119, θ_dynamicNames[87] = kd120, θ_dynamicNames[88] = kd123, θ_dynamicNames[89] = kd123h, θ_dynamicNames[90] = kd17, θ_dynamicNames[91] = kd18, θ_dynamicNames[92] = kd19, θ_dynamicNames[93] = kd2, θ_dynamicNames[94] = kd20, θ_dynamicNames[95] = kd21, θ_dynamicNames[96] = kd22, θ_dynamicNames[97] = kd22b, θ_dynamicNames[98] = kd23, θ_dynamicNames[99] = kd24, θ_dynamicNames[100] = kd25, θ_dynamicNames[101] = kd28, θ_dynamicNames[102] = kd29, θ_dynamicNames[103] = kd2b, θ_dynamicNames[104] = kd32, θ_dynamicNames[105] = kd33, θ_dynamicNames[106] = kd34, θ_dynamicNames[107] = kd35, θ_dynamicNames[108] = kd37, θ_dynamicNames[109] = kd4, θ_dynamicNames[110] = kd40, θ_dynamicNames[111] = kd41, θ_dynamicNames[112] = kd42, θ_dynamicNames[113] = kd43, θ_dynamicNames[114] = kd44, θ_dynamicNames[115] = kd45, θ_dynamicNames[116] = kd47, θ_dynamicNames[117] = kd48, θ_dynamicNames[118] = kd49, θ_dynamicNames[119] = kd5, θ_dynamicNames[120] = kd50, θ_dynamicNames[121] = kd52, θ_dynamicNames[122] = kd53, θ_dynamicNames[123] = kd55, θ_dynamicNames[124] = kd56, θ_dynamicNames[125] = kd57, θ_dynamicNames[126] = kd58, θ_dynamicNames[127] = kd5b, θ_dynamicNames[128] = kd63, θ_dynamicNames[129] = kd64, θ_dynamicNames[130] = kd65, θ_dynamicNames[131] = kd66, θ_dynamicNames[132] = kd67, θ_dynamicNames[133] = kd68, θ_dynamicNames[134] = kd68b, θ_dynamicNames[135] = kd69, θ_dynamicNames[136] = kd7, θ_dynamicNames[137] = kd70, θ_dynamicNames[138] = kd71, θ_dynamicNames[139] = kd72, θ_dynamicNames[140] = kd73, θ_dynamicNames[141] = kd74, θ_dynamicNames[142] = kd75, θ_dynamicNames[143] = kd76, θ_dynamicNames[144] = kd8, θ_dynamicNames[145] = kd8b, θ_dynamicNames[146] = kd94, θ_dynamicNames[147] = kd95, θ_dynamicNames[148] = kd96, θ_dynamicNames[149] = kd97, θ_dynamicNames[150] = kd97c, θ_dynamicNames[151] = kd98, θ_dynamicNames[152] = kd99
##parameterInfo.nominalValue[7] = k104_C 
#parameterInfo.nominalValue[12] = k108_C 
#parameterInfo.nominalValue[16] = k111_C 
#parameterInfo.nominalValue[18] = k113_C 
#parameterInfo.nominalValue[20] = k115_C 
#parameterInfo.nominalValue[22] = k118_C 
#parameterInfo.nominalValue[25] = k123_C 
#parameterInfo.nominalValue[26] = k123h_C 
#parameterInfo.nominalValue[52] = k43_C 
#parameterInfo.nominalValue[54] = k45_C 
#parameterInfo.nominalValue[55] = k47_C 
#parameterInfo.nominalValue[57] = k49_C 
#parameterInfo.nominalValue[58] = k4b_C 
#parameterInfo.nominalValue[59] = k5_C 
#parameterInfo.nominalValue[62] = k53_C 
#parameterInfo.nominalValue[63] = k55_C 
#parameterInfo.nominalValue[65] = k57_C 
#parameterInfo.nominalValue[67] = k5b_C 
#parameterInfo.nominalValue[75] = k65_C 
#parameterInfo.nominalValue[78] = k68_C 
#parameterInfo.nominalValue[80] = k6b_C 
#parameterInfo.nominalValue[83] = k71_C 
#parameterInfo.nominalValue[84] = k72_C 
#parameterInfo.nominalValue[87] = k75_C 
#parameterInfo.nominalValue[88] = k76_C 
#parameterInfo.nominalValue[93] = k95_C 
#parameterInfo.nominalValue[113] = kd116_C 
#parameterInfo.nominalValue[120] = kd15_C 
#parameterInfo.nominalValue[139] = kd36_C 
#parameterInfo.nominalValue[160] = kd60_C 
#parameterInfo.nominalValue[161] = kd60b_C 
#parameterInfo.nominalValue[162] = kd61_C 
#parameterInfo.nominalValue[171] = kd6b_C 


function compute_h(u::AbstractVector, t::Real, θ_dynamic::AbstractVector, θ_observable::AbstractVector,
                   θ_nonDynamic::AbstractVector, parameterInfo::ParametersInfo, observableId::Symbol, 
                      parameterMap::θObsOrSdParameterMap)::Real 
	if observableId == :AKT_PP 
		observableParameter1_AKT_PP = getObsOrSdParam(θ_observable, parameterMap)
		return ( u[349] + u[261] + u[340] + u[495] ) / observableParameter1_AKT_PP 
	end

	if observableId == :ERB_B1_P_tot 
		observableParameter1_ERB_B1_P_tot = getObsOrSdParam(θ_observable, parameterMap)
		return ( 2 * u[442] + 2 * u[145] + 2 * u[373] + 2 * u[415] + 2 * u[65] + 2 * u[114] + 2 * u[308] + 2 * u[184] + 2 * u[330] + 2 * u[180] + 2 * u[211] + 2 * u[354] + 2 * u[498] + 2 * u[492] + 2 * u[231] + 2 * u[209] + 2 * u[341] + 2 * u[101] + 2 * u[42] + 2 * u[179] + 2 * u[81] + 2 * u[337] + 2 * u[410] + 2 * u[379] + 2 * u[407] + 2 * u[399] + 2 * u[297] + 2 * u[317] + 2 * u[7] + 2 * u[155] + 2 * u[374] + 2 * u[99] + 2 * u[123] + 2 * u[29] + 2 * u[446] + 2 * u[79] + 2 * u[106] + 2 * u[474] + 2 * u[96] + u[409] + u[116] + u[284] + 2 * u[320] + u[149] + u[134] + u[350] + u[147] + u[244] + u[159] + u[406] + u[18] + u[414] + u[8] + u[28] + u[222] + u[194] + u[301] + u[296] + u[467] + u[31] + u[458] + u[334] + u[112] + u[38] + u[163] + u[427] + u[223] + u[52] + u[56] + u[240] + u[157] + u[167] + u[199] + u[309] + u[351] + u[329] + u[377] + u[438] + u[469] + u[247] + u[174] + u[98] + u[191] + u[345] + u[242] + u[171] + u[274] + u[221] + u[67] + u[142] + u[466] + u[311] + u[138] + u[144] + u[367] + u[172] + u[118] + u[78] + u[348] + u[270] + u[130] + u[40] + u[418] + u[232] + u[74] + u[20] + u[398] + u[127] + u[131] + u[156] + u[124] + u[441] + u[480] + u[229] + u[275] + u[161] + u[439] + u[193] + u[195] + u[294] + u[202] + u[104] + u[282] + u[238] + u[269] + u[80] + u[197] + u[210] + u[449] + u[460] + u[178] + u[93] + u[356] + u[45] + u[493] + u[12] + u[447] + u[192] + u[325] + u[472] + u[260] + u[9] + 2 * u[115] + u[257] + u[277] + u[86] + u[48] + u[14] + u[141] + u[59] + u[190] + u[411] + 2 * u[205] + u[11] + 2 * u[256] + 2 * u[66] + u[224] + u[220] + u[344] + 2 * u[204] + 2 * u[2] + u[500] + u[102] + u[420] + u[471] + u[444] + u[113] + u[473] + u[292] + u[392] + 2 * u[391] + u[419] + u[76] + u[463] + u[200] + u[125] + u[5] + 2 * u[306] + 2 * u[264] + 2 * u[117] ) / observableParameter1_ERB_B1_P_tot 
	end

	if observableId == :ERK_PP 
		observableParameter1_ERK_PP = getObsOrSdParam(θ_observable, parameterMap)
		return ( u[246] + u[404] + u[234] + u[336] + u[123] + u[29] + u[446] + u[79] + u[82] + u[46] + u[204] + u[2] + u[500] + u[102] + u[420] + u[471] + u[444] + u[113] + u[408] + u[165] + u[468] + u[353] + u[303] + u[424] ) / observableParameter1_ERK_PP 
	end

end

function compute_u0!(u0::AbstractVector, pODEProblem::AbstractVector) 

	#pODEProblem[1] = k71, pODEProblem[2] = kd25, pODEProblem[3] = kd120, pODEProblem[4] = c515, pODEProblem[5] = k120, pODEProblem[6] = kd47, pODEProblem[7] = kd94, pODEProblem[8] = k73, pODEProblem[9] = kd36, pODEProblem[10] = kd123h, pODEProblem[11] = kd119, pODEProblem[12] = kd49, pODEProblem[13] = kd4, pODEProblem[14] = k45, pODEProblem[15] = kd106b, pODEProblem[16] = kd10, pODEProblem[17] = kd71, pODEProblem[18] = k105, pODEProblem[19] = kd101, pODEProblem[20] = kd17, pODEProblem[21] = k106b, pODEProblem[22] = kd111, pODEProblem[23] = StepMini_bool3, pODEProblem[24] = k2, pODEProblem[25] = kd109, pODEProblem[26] = k111, pODEProblem[27] = kd23, pODEProblem[28] = k8, pODEProblem[29] = Step33_bool3, pODEProblem[30] = kd75, pODEProblem[31] = Step10Mio_bool2, pODEProblem[32] = kd60b, pODEProblem[33] = kd63, pODEProblem[34] = kd69, pODEProblem[35] = k94b, pODEProblem[36] = kd42, pODEProblem[37] = Step33_bool1, pODEProblem[38] = kd68b, pODEProblem[39] = k114, pODEProblem[40] = kd40, pODEProblem[41] = k74, pODEProblem[42] = kd114, pODEProblem[43] = k67, pODEProblem[44] = k69, pODEProblem[45] = k44, pODEProblem[46] = k94, pODEProblem[47] = kd33, pODEProblem[48] = kd5, pODEProblem[49] = Step10Mio_bool3, pODEProblem[50] = kd7, pODEProblem[51] = kd105, pODEProblem[52] = kd18, pODEProblem[53] = k5, pODEProblem[54] = k96, pODEProblem[55] = k76, pODEProblem[56] = k40, pODEProblem[57] = k102, pODEProblem[58] = kd35, pODEProblem[59] = k61, pODEProblem[60] = Step1_bool1, pODEProblem[61] = k117, pODEProblem[62] = kd56, pODEProblem[63] = Step5_bool1, pODEProblem[64] = kd104, pODEProblem[65] = kd115, pODEProblem[66] = k5b, pODEProblem[67] = kd50, pODEProblem[68] = k113, pODEProblem[69] = k20, pODEProblem[70] = c1, pODEProblem[71] = k112, pODEProblem[72] = kd5b, pODEProblem[73] = k35, pODEProblem[74] = k104, pODEProblem[75] = k75, pODEProblem[76] = k19, pODEProblem[77] = c514, pODEProblem[78] = kd97, pODEProblem[79] = k22, pODEProblem[80] = kd29, pODEProblem[81] = k65, pODEProblem[82] = kd2b, pODEProblem[83] = kd37, pODEProblem[84] = Step5_bool2, pODEProblem[85] = k50, pODEProblem[86] = kd76, pODEProblem[87] = k48, pODEProblem[88] = k25, pODEProblem[89] = kd8, pODEProblem[90] = k29, pODEProblem[91] = kd32, pODEProblem[92] = kd110, pODEProblem[93] = kd52, pODEProblem[94] = kd22, pODEProblem[95] = k107, pODEProblem[96] = k56, pODEProblem[97] = k60, pODEProblem[98] = k33, pODEProblem[99] = kd15, pODEProblem[100] = StepMini_bool1, pODEProblem[101] = kd67, pODEProblem[102] = Step1_bool3, pODEProblem[103] = k72, pODEProblem[104] = k58, pODEProblem[105] = kd108, pODEProblem[106] = k118, pODEProblem[107] = kd99, pODEProblem[108] = kd58, pODEProblem[109] = k101, pODEProblem[110] = k60b, pODEProblem[111] = k7, pODEProblem[112] = k34, pODEProblem[113] = k18, pODEProblem[114] = kd24, pODEProblem[115] = StepLate_bool1, pODEProblem[116] = kd34, pODEProblem[117] = kd112, pODEProblem[118] = k95, pODEProblem[119] = kd2, pODEProblem[120] = k53, pODEProblem[121] = kd103, pODEProblem[122] = kd117, pODEProblem[123] = k42, pODEProblem[124] = kd43, pODEProblem[125] = k70, pODEProblem[126] = k57, pODEProblem[127] = kd21, pODEProblem[128] = k6, pODEProblem[129] = Step10Mio_bool1, pODEProblem[130] = kd95, pODEProblem[131] = kd41, pODEProblem[132] = kd66, pODEProblem[133] = kd72, pODEProblem[134] = kd48, pODEProblem[135] = StepMini_bool2, pODEProblem[136] = Step0, pODEProblem[137] = k52, pODEProblem[138] = kd98, pODEProblem[139] = kd57, pODEProblem[140] = k49, pODEProblem[141] = k6b, pODEProblem[142] = k108, pODEProblem[143] = k41, pODEProblem[144] = kd60, pODEProblem[145] = kd64, pODEProblem[146] = k47, pODEProblem[147] = kd6b, pODEProblem[148] = k2b, pODEProblem[149] = kd55, pODEProblem[150] = kd107, pODEProblem[151] = k4, pODEProblem[152] = cyt, pODEProblem[153] = k115, pODEProblem[154] = k68, pODEProblem[155] = k109, pODEProblem[156] = kd61, pODEProblem[157] = k10b, pODEProblem[158] = k36, pODEProblem[159] = kd70, pODEProblem[160] = kd44, pODEProblem[161] = kd45, pODEProblem[162] = k16, pODEProblem[163] = k43, pODEProblem[164] = k66, pODEProblem[165] = k28, pODEProblem[166] = kd116, pODEProblem[167] = kd74, pODEProblem[168] = kd28, pODEProblem[169] = k64, pODEProblem[170] = Step33_bool2, pODEProblem[171] = kd73, pODEProblem[172] = k123, pODEProblem[173] = kd106, pODEProblem[174] = kd65, pODEProblem[175] = StepLate_bool2, pODEProblem[176] = k120b, pODEProblem[177] = c285, pODEProblem[178] = k103, pODEProblem[179] = kd118, pODEProblem[180] = kd97c, pODEProblem[181] = k62b, pODEProblem[182] = kd100, pODEProblem[183] = k37, pODEProblem[184] = kd68, pODEProblem[185] = StepLate_bool3, pODEProblem[186] = k110, pODEProblem[187] = k32, pODEProblem[188] = Step5_bool3, pODEProblem[189] = k17, pODEProblem[190] = k21, pODEProblem[191] = k4b, pODEProblem[192] = kd102, pODEProblem[193] = kd113, pODEProblem[194] = Step1_bool2, pODEProblem[195] = k15, pODEProblem[196] = k1d, pODEProblem[197] = k123h, pODEProblem[198] = kd53, pODEProblem[199] = kd22b, pODEProblem[200] = kd20, pODEProblem[201] = k23, pODEProblem[202] = k60c, pODEProblem[203] = k106, pODEProblem[204] = kd8b, pODEProblem[205] = kd123, pODEProblem[206] = kd19, pODEProblem[207] = k8b, pODEProblem[208] = kd96, pODEProblem[209] = k55

	c144 = 0.0 
	c432 = 0.0 
	c395 = 0.0 
	c513 = 0.0 
	c466 = 0.0 
	c392 = 0.0 
	c91 = 0.0 
	c165 = 0.0 
	c263 = 0.0 
	c41 = 71131.2 
	c416 = 0.0 
	c257 = 0.0 
	c511 = 0.0 
	c282 = 0.0 
	c504 = 0.0 
	c58 = 0.0 
	c2 = 0.0 
	c163 = 0.0 
	c128 = 0.0 
	c227 = 0.0 
	c453 = 0.0 
	c310 = 0.0 
	c320 = 0.0 
	c487 = 0.0 
	c12 = 4498.73 
	c307 = 0.0 
	c390 = 0.0 
	c166 = 0.0 
	c96 = 0.0 
	c371 = 0.0 
	c175 = 0.0 
	c81 = 0.0 
	c529 = 0.0 
	c122 = 0.0 
	c495 = 0.0 
	c44 = 50000.0 
	c530 = 0.0 
	c182 = 0.0 
	c80 = 0.0 
	c223 = 0.0 
	c302 = 0.0 
	c37 = 0.0 
	c289 = 0.0 
	c526 = 0.0 
	c255 = 0.0 
	c102 = 0.0 
	c425 = 0.0 
	c281 = 0.0 
	c501 = 0.0 
	c348 = 0.0 
	c158 = 0.0 
	c189 = 0.0 
	c366 = 0.0 
	c305 = 0.0 
	c116 = 0.0 
	c190 = 0.0 
	c42 = 0.0 
	c457 = 0.0 
	c410 = 0.0 
	c493 = 0.0 
	c76 = 0.0 
	c463 = 1.0e6 
	c444 = 393639.0 
	c38 = 0.0 
	c17 = 0.0 
	c420 = 0.0 
	c210 = 0.0 
	c159 = 0.0 
	c385 = 0.0 
	c439 = 0.0 
	c370 = 0.0 
	c336 = 0.0 
	c11 = 0.0 
	c226 = 0.0 
	c314 = 0.0 
	c450 = 0.0 
	c127 = 0.0 
	c219 = 0.0 
	c98 = 0.0 
	c247 = 0.0 
	c64 = 0.0 
	c101 = 0.0 
	c315 = 0.0 
	c330 = 0.0 
	c482 = 0.0 
	c267 = 0.0 
	c142 = 0.0 
	c343 = 0.0 
	c123 = 0.0 
	c69 = 0.0 
	c60 = 16870.2 
	c169 = 0.0 
	c253 = 0.0 
	c404 = 0.0 
	c552 = 0.0 
	c104 = 0.0 
	c114 = 0.0 
	c203 = 0.0 
	c94 = 0.0 
	c520 = 0.0 
	c36 = 0.0 
	c434 = 0.0 
	c364 = 0.0 
	c243 = 0.0 
	c555 = 0.0 
	c99 = 0.0 
	c424 = 0.0 
	c360 = 0.0 
	c156 = 0.0 
	c157 = 0.0 
	c313 = 0.0 
	c181 = 0.0 
	c440 = 0.0 
	c18 = 0.0 
	c264 = 0.0 
	c131 = 0.0 
	c489 = 0.0 
	c218 = 0.0 
	c300 = 0.0 
	c108 = 0.0 
	c137 = 0.0 
	c507 = 0.0 
	c95 = 0.0 
	c232 = 0.0 
	c465 = 0.0 
	c321 = 0.0 
	c229 = 0.0 
	c86 = 0.0 
	c377 = 0.0 
	c222 = 0.0 
	c230 = 0.0 
	c347 = 0.0 
	c344 = 0.0 
	c149 = 0.0 
	c522 = 0.0 
	c106 = 0.0 
	c280 = 70000.0 
	c214 = 0.0 
	c550 = 0.0 
	c396 = 0.0 
	c409 = 0.0 
	c211 = 0.0 
	c57 = 0.0 
	c215 = 0.0 
	c7 = 0.0 
	c306 = 0.0 
	c151 = 0.0 
	c82 = 0.0 
	c148 = 0.0 
	c557 = 0.0 
	c361 = 0.0 
	c49 = 0.0 
	c473 = 0.0 
	c388 = 0.0 
	c92 = 0.0 
	c231 = 0.0 
	c192 = 0.0 
	c496 = 0.0 
	c153 = 0.0 
	c309 = 0.0 
	c237 = 0.0 
	c356 = 0.0 
	c183 = 0.0 
	c521 = 0.0 
	c475 = 0.0 
	c115 = 0.0 
	c193 = 0.0 
	c294 = 0.0 
	c452 = 0.0 
	c77 = 0.0 
	c207 = 0.0 
	c217 = 0.0 
	c422 = 0.0 
	c202 = 0.0 
	c10 = 0.0 
	c71 = 0.0 
	c462 = 0.0 
	c252 = 0.0 
	c63 = 0.0 
	c23 = 0.0 
	c55 = 695000.0 
	c296 = 0.0 
	c30 = 8.8914e7 
	c20 = 0.0 
	c54 = 0.0 
	c111 = 0.0 
	c331 = 0.0 
	c349 = 0.0 
	c113 = 450000.0 
	c411 = 0.0 
	c204 = 0.0 
	c259 = 0.0 
	c239 = 0.0 
	c171 = 0.0 
	c240 = 0.0 
	c368 = 0.0 
	c248 = 0.0 
	c418 = 0.0 
	c194 = 0.0 
	c464 = 0.0 
	c312 = 0.0 
	c242 = 0.0 
	c297 = 0.0 
	c431 = 0.0 
	c415 = 0.0 
	c47 = 3.02e6 
	c133 = 0.0 
	c168 = 0.0 
	c34 = 0.0 
	c249 = 0.0 
	c25 = 0.0 
	c359 = 0.0 
	c503 = 0.0 
	c398 = 0.0 
	c502 = 0.0 
	c24 = 0.0 
	c523 = 0.0 
	c532 = 0.0 
	c3 = 0.0 
	c428 = 0.0 
	c209 = 0.0 
	c167 = 0.0 
	c185 = 0.0 
	c427 = 0.0 
	c332 = 0.0 
	c436 = 0.0 
	c379 = 0.0 
	c403 = 0.0 
	c235 = 0.0 
	c394 = 0.0 
	c33 = 0.0 
	c225 = 0.0 
	c383 = 0.0 
	c83 = 0.0 
	c105 = 1.2e9 
	c87 = 0.0 
	c442 = 0.0 
	c245 = 0.0 
	c455 = 0.0 
	c191 = 0.0 
	c468 = 0.0 
	c206 = 0.0 
	c363 = 0.0 
	c152 = 0.0 
	c279 = 56100.9 
	c59 = 0.0 
	c201 = 0.0 
	c556 = 0.0 
	c558 = 0.0 
	c476 = 0.0 
	c346 = 0.0 
	c471 = 0.0 
	c399 = 0.0 
	c488 = 0.0 
	c393 = 0.0 
	c419 = 0.0 
	c265 = 0.0 
	c79 = 0.0 
	c467 = 0.0 
	c262 = 0.0 
	c484 = 0.0 
	c456 = 0.0 
	c75 = 0.0 
	c486 = 0.0 
	c129 = 0.0 
	c525 = 0.0 
	c384 = 0.0 
	c402 = 0.0 
	c246 = 0.0 
	c221 = 0.0 
	c417 = 0.0 
	c491 = 0.0 
	c50 = 0.0 
	c208 = 0.0 
	c236 = 0.0 
	c376 = 0.0 
	c266 = 0.0 
	c6 = 0.0 
	c407 = 0.0 
	c510 = 0.0 
	c103 = 0.0 
	c244 = 0.0 
	c479 = 0.0 
	c132 = 0.0 
	c375 = 0.0 
	c492 = 0.0 
	c519 = 0.0 
	c85 = 0.0 
	c499 = 0.0 
	c485 = 0.0 
	c299 = 0.0 
	c446 = 0.0 
	c500 = 0.0 
	c241 = 0.0 
	c46 = 0.0 
	c173 = 0.0 
	c89 = 0.0 
	c517 = 0.0 
	c387 = 0.0 
	c372 = 0.0 
	c172 = 0.0 
	c353 = 0.0 
	c480 = 0.0 
	c380 = 0.0 
	c469 = 0.0 
	c483 = 0.0 
	c48 = 0.0 
	c19 = 0.0 
	c195 = 0.0 
	c381 = 0.0 
	c213 = 0.0 
	c160 = 0.0 
	c308 = 0.0 
	c391 = 0.0 
	c170 = 0.0 
	c317 = 0.0 
	c90 = 0.0 
	c516 = 0.0 
	c139 = 0.0 
	c136 = 0.0 
	c303 = 0.0 
	c9 = 0.0 
	c39 = 0.0 
	c373 = 0.0 
	c260 = 0.0 
	c508 = 0.0 
	c62 = 0.0 
	c126 = 0.0 
	c197 = 0.0 
	c21 = 0.0 
	c506 = 0.0 
	c426 = 94868.3 
	c518 = 0.0 
	c180 = 0.0 
	c31 = 1.1e6 
	c84 = 0.0 
	c65 = 0.0 
	c408 = 0.0 
	c340 = 0.0 
	c497 = 0.0 
	c35 = 0.0 
	c401 = 0.0 
	c14 = 534751.0 
	c429 = 0.0 
	c205 = 0.0 
	c135 = 0.0 
	c386 = 0.0 
	c220 = 0.0 
	c472 = 0.0 
	c150 = 0.0 
	c196 = 0.0 
	c358 = 0.0 
	c478 = 0.0 
	c27 = 0.0 
	c357 = 0.0 
	c254 = 0.0 
	c286 = 0.0 
	c460 = 0.0 
	c430 = 0.0 
	c45 = 0.0 
	c147 = 0.0 
	c284 = 0.0 
	c494 = 0.0 
	c291 = 0.0 
	c339 = 0.0 
	c354 = 0.0 
	c216 = 0.0 
	c28 = 0.0 
	c400 = 0.0 
	c319 = 0.0 
	c70 = 0.0 
	c72 = 0.0 
	c8 = 0.0 
	c93 = 0.0 
	c13 = 0.0 
	c112 = 0.0 
	c198 = 0.0 
	c51 = 0.0 
	c67 = 0.0 
	c74 = 0.0 
	c16 = 0.0 
	c138 = 0.0 
	c22 = 1264.91 
	c323 = 0.0 
	c338 = 0.0 
	c367 = 0.0 
	c382 = 0.0 
	c268 = 0.0 
	c141 = 462000.0 
	c124 = 0.0 
	c448 = 0.0 
	c447 = 0.0 
	c374 = 0.0 
	c509 = 0.0 
	c52 = 0.0 
	c301 = 0.0 
	c551 = 0.0 
	c228 = 0.0 
	c88 = 0.0 
	c362 = 0.0 
	c125 = 0.0 
	c490 = 0.0 
	c421 = 0.0 
	c61 = 0.0 
	c365 = 0.0 
	c162 = 0.0 
	c68 = 0.0 
	c474 = 0.0 
	c130 = 0.0 
	c66 = 0.0 
	c412 = 0.0 
	c161 = 0.0 
	c324 = 0.0 
	c164 = 0.0 
	c15 = 0.0 
	c528 = 0.0 
	c389 = 0.0 
	c224 = 0.0 
	c449 = 0.0 
	c435 = 0.0 
	c337 = 0.0 
	c154 = 0.0 
	c143 = 794.0 
	c481 = 0.0 
	c311 = 0.0 
	c26 = 58095.2 
	c184 = 0.0 
	c355 = 0.0 
	c531 = 1.08e6 
	c117 = 0.0 
	c341 = 0.0 
	c53 = 124480.0 
	c512 = 0.0 
	c4 = 0.0 
	c405 = 0.0 
	c73 = 0.0 
	c145 = 0.0 
	c199 = 0.0 
	c238 = 0.0 
	c350 = 0.0 
	c233 = 0.0 
	c5 = 0.0 
	c454 = 0.0 
	c438 = 0.0 
	c287 = 3.55656e7 
	c97 = 0.0 
	c258 = 0.0 
	c304 = 0.0 
	c250 = 0.0 
	c283 = 0.0 
	c335 = 0.0 
	c146 = 0.0 
	c269 = 0.0 
	c288 = 0.0 
	c322 = 0.0 
	c461 = 2213.59 
	c351 = 0.0 
	c176 = 0.0 
	c325 = 0.0 
	c251 = 0.0 
	c56 = 0.0 
	c316 = 0.0 
	c451 = 0.0 
	c369 = 0.0 
	c78 = 0.0 
	c212 = 0.0 
	c174 = 0.0 
	c477 = 0.0 
	c200 = 0.0 
	c121 = 0.0 
	c437 = 0.0 
	c261 = 0.0 
	c445 = 0.0 
	c100 = 0.0 
	c470 = 0.0 
	c109 = 3.00416e8 
	c553 = 0.0 
	c397 = 0.0 
	c290 = 0.0 
	c234 = 0.0 
	c554 = 0.0 
	c293 = 0.0 
	c140 = 6230.0 
	c524 = 0.0 
	c155 = 0.0 
	c134 = 0.0 
	c527 = 0.0 
	c378 = 0.0 
	c505 = 0.0 
	c40 = 0.0 
	c318 = 0.0 
	c32 = 0.0 
	c256 = 0.0 
	c43 = 0.0 
	c498 = 0.0 
	c107 = 905000.0 
	c345 = 0.0 
	c29 = 0.0 
	c110 = 0.0 
	c433 = 0.0 

	u0 .= c144, c432, c395, c513, c466, c392, c91, c165, c263, c41, c416, c257, c511, c282, c504, c58, c2, c163, c128, c227, c453, c310, c320, c487, c12, c307, c390, c166, c96, c371, c175, c81, c529, c122, c495, c44, c530, c182, c80, c223, c302, c37, c289, c526, c255, c102, c425, c281, c501, c348, c158, c189, c366, c305, c116, c190, c42, c457, c410, c493, c76, c463, c444, c38, c17, c420, c210, c159, c385, c439, c370, c336, c11, c226, c314, c450, c127, c219, c98, c247, c64, c101, c315, c330, c482, c267, c142, c343, c123, c69, c60, c169, c253, c404, c552, c104, c114, c203, c94, c520, c36, c434, c364, c243, c555, c99, c424, c360, c156, c157, c313, c181, c440, c18, c264, c131, c489, c218, c300, c108, c137, c507, c95, c232, c465, c321, c229, c86, c377, c222, c230, c347, c344, c149, c522, c106, c280, c214, c550, c396, c409, c211, c57, c215, c7, c306, c151, c82, c148, c557, c361, c49, c473, c388, c92, c231, c192, c496, c153, c309, c237, c356, c183, c521, c475, c115, c193, c294, c452, c77, c207, c217, c422, c202, c10, c71, c462, c252, c63, c23, c55, c296, c30, c20, c54, c111, c331, c349, c113, c411, c204, c259, c239, c171, c240, c368, c248, c418, c194, c464, c312, c242, c297, c431, c415, c47, c133, c168, c34, c249, c25, c359, c503, c398, c502, c24, c523, c532, c3, c428, c209, c167, c185, c427, c332, c436, c379, c403, c235, c394, c33, c225, c383, c83, c105, c87, c442, c245, c455, c191, c468, c206, c363, c152, c279, c59, c201, c556, c558, c476, c346, c471, c399, c488, c393, c419, c265, c79, c467, c262, c484, c456, c75, c486, c129, c525, c384, c402, c246, c221, c417, c491, c50, c208, c236, c376, c266, c6, c407, c510, c103, c244, c479, c132, c375, c492, c519, c85, c499, c485, c299, c446, c500, c241, c46, c173, c89, c517, c387, c372, c172, c353, c480, c380, c469, c483, c48, c19, c195, c381, c213, c160, c308, c391, c170, c317, c90, c516, c139, c136, c303, c9, c39, c373, c260, c508, c62, c126, c197, c21, c506, c426, c518, c180, c31, c84, c65, c408, c340, c497, c35, c401, c14, c429, c205, c135, c386, c220, c472, c150, c196, c358, c478, c27, c357, c254, c286, c460, c430, c45, c147, c284, c494, c291, c339, c354, c216, c28, c400, c319, c70, c72, c8, c93, c13, c112, c198, c51, c67, c74, c16, c138, c22, c323, c338, c367, c382, c268, c141, c124, c448, c447, c374, c509, c52, c301, c551, c228, c88, c362, c125, c490, c421, c61, c365, c162, c68, c474, c130, c66, c412, c161, c324, c164, c15, c528, c389, c224, c449, c435, c337, c154, c143, c481, c311, c26, c184, c355, c531, c117, c341, c53, c512, c4, c405, c73, c145, c199, c238, c350, c233, c5, c454, c438, c287, c97, c258, c304, c250, c283, c335, c146, c269, c288, c322, c461, c351, c176, c325, c251, c56, c316, c451, c369, c78, c212, c174, c477, c200, c121, c437, c261, c445, c100, c470, c109, c553, c397, c290, c234, c554, c293, c140, c524, c155, c134, c527, c378, c505, c40, c318, c32, c256, c43, c498, c107, c345, c29, c110, c433
end

function compute_u0(pODEProblem::AbstractVector)::AbstractVector 

	#pODEProblem[1] = k71, pODEProblem[2] = kd25, pODEProblem[3] = kd120, pODEProblem[4] = c515, pODEProblem[5] = k120, pODEProblem[6] = kd47, pODEProblem[7] = kd94, pODEProblem[8] = k73, pODEProblem[9] = kd36, pODEProblem[10] = kd123h, pODEProblem[11] = kd119, pODEProblem[12] = kd49, pODEProblem[13] = kd4, pODEProblem[14] = k45, pODEProblem[15] = kd106b, pODEProblem[16] = kd10, pODEProblem[17] = kd71, pODEProblem[18] = k105, pODEProblem[19] = kd101, pODEProblem[20] = kd17, pODEProblem[21] = k106b, pODEProblem[22] = kd111, pODEProblem[23] = StepMini_bool3, pODEProblem[24] = k2, pODEProblem[25] = kd109, pODEProblem[26] = k111, pODEProblem[27] = kd23, pODEProblem[28] = k8, pODEProblem[29] = Step33_bool3, pODEProblem[30] = kd75, pODEProblem[31] = Step10Mio_bool2, pODEProblem[32] = kd60b, pODEProblem[33] = kd63, pODEProblem[34] = kd69, pODEProblem[35] = k94b, pODEProblem[36] = kd42, pODEProblem[37] = Step33_bool1, pODEProblem[38] = kd68b, pODEProblem[39] = k114, pODEProblem[40] = kd40, pODEProblem[41] = k74, pODEProblem[42] = kd114, pODEProblem[43] = k67, pODEProblem[44] = k69, pODEProblem[45] = k44, pODEProblem[46] = k94, pODEProblem[47] = kd33, pODEProblem[48] = kd5, pODEProblem[49] = Step10Mio_bool3, pODEProblem[50] = kd7, pODEProblem[51] = kd105, pODEProblem[52] = kd18, pODEProblem[53] = k5, pODEProblem[54] = k96, pODEProblem[55] = k76, pODEProblem[56] = k40, pODEProblem[57] = k102, pODEProblem[58] = kd35, pODEProblem[59] = k61, pODEProblem[60] = Step1_bool1, pODEProblem[61] = k117, pODEProblem[62] = kd56, pODEProblem[63] = Step5_bool1, pODEProblem[64] = kd104, pODEProblem[65] = kd115, pODEProblem[66] = k5b, pODEProblem[67] = kd50, pODEProblem[68] = k113, pODEProblem[69] = k20, pODEProblem[70] = c1, pODEProblem[71] = k112, pODEProblem[72] = kd5b, pODEProblem[73] = k35, pODEProblem[74] = k104, pODEProblem[75] = k75, pODEProblem[76] = k19, pODEProblem[77] = c514, pODEProblem[78] = kd97, pODEProblem[79] = k22, pODEProblem[80] = kd29, pODEProblem[81] = k65, pODEProblem[82] = kd2b, pODEProblem[83] = kd37, pODEProblem[84] = Step5_bool2, pODEProblem[85] = k50, pODEProblem[86] = kd76, pODEProblem[87] = k48, pODEProblem[88] = k25, pODEProblem[89] = kd8, pODEProblem[90] = k29, pODEProblem[91] = kd32, pODEProblem[92] = kd110, pODEProblem[93] = kd52, pODEProblem[94] = kd22, pODEProblem[95] = k107, pODEProblem[96] = k56, pODEProblem[97] = k60, pODEProblem[98] = k33, pODEProblem[99] = kd15, pODEProblem[100] = StepMini_bool1, pODEProblem[101] = kd67, pODEProblem[102] = Step1_bool3, pODEProblem[103] = k72, pODEProblem[104] = k58, pODEProblem[105] = kd108, pODEProblem[106] = k118, pODEProblem[107] = kd99, pODEProblem[108] = kd58, pODEProblem[109] = k101, pODEProblem[110] = k60b, pODEProblem[111] = k7, pODEProblem[112] = k34, pODEProblem[113] = k18, pODEProblem[114] = kd24, pODEProblem[115] = StepLate_bool1, pODEProblem[116] = kd34, pODEProblem[117] = kd112, pODEProblem[118] = k95, pODEProblem[119] = kd2, pODEProblem[120] = k53, pODEProblem[121] = kd103, pODEProblem[122] = kd117, pODEProblem[123] = k42, pODEProblem[124] = kd43, pODEProblem[125] = k70, pODEProblem[126] = k57, pODEProblem[127] = kd21, pODEProblem[128] = k6, pODEProblem[129] = Step10Mio_bool1, pODEProblem[130] = kd95, pODEProblem[131] = kd41, pODEProblem[132] = kd66, pODEProblem[133] = kd72, pODEProblem[134] = kd48, pODEProblem[135] = StepMini_bool2, pODEProblem[136] = Step0, pODEProblem[137] = k52, pODEProblem[138] = kd98, pODEProblem[139] = kd57, pODEProblem[140] = k49, pODEProblem[141] = k6b, pODEProblem[142] = k108, pODEProblem[143] = k41, pODEProblem[144] = kd60, pODEProblem[145] = kd64, pODEProblem[146] = k47, pODEProblem[147] = kd6b, pODEProblem[148] = k2b, pODEProblem[149] = kd55, pODEProblem[150] = kd107, pODEProblem[151] = k4, pODEProblem[152] = cyt, pODEProblem[153] = k115, pODEProblem[154] = k68, pODEProblem[155] = k109, pODEProblem[156] = kd61, pODEProblem[157] = k10b, pODEProblem[158] = k36, pODEProblem[159] = kd70, pODEProblem[160] = kd44, pODEProblem[161] = kd45, pODEProblem[162] = k16, pODEProblem[163] = k43, pODEProblem[164] = k66, pODEProblem[165] = k28, pODEProblem[166] = kd116, pODEProblem[167] = kd74, pODEProblem[168] = kd28, pODEProblem[169] = k64, pODEProblem[170] = Step33_bool2, pODEProblem[171] = kd73, pODEProblem[172] = k123, pODEProblem[173] = kd106, pODEProblem[174] = kd65, pODEProblem[175] = StepLate_bool2, pODEProblem[176] = k120b, pODEProblem[177] = c285, pODEProblem[178] = k103, pODEProblem[179] = kd118, pODEProblem[180] = kd97c, pODEProblem[181] = k62b, pODEProblem[182] = kd100, pODEProblem[183] = k37, pODEProblem[184] = kd68, pODEProblem[185] = StepLate_bool3, pODEProblem[186] = k110, pODEProblem[187] = k32, pODEProblem[188] = Step5_bool3, pODEProblem[189] = k17, pODEProblem[190] = k21, pODEProblem[191] = k4b, pODEProblem[192] = kd102, pODEProblem[193] = kd113, pODEProblem[194] = Step1_bool2, pODEProblem[195] = k15, pODEProblem[196] = k1d, pODEProblem[197] = k123h, pODEProblem[198] = kd53, pODEProblem[199] = kd22b, pODEProblem[200] = kd20, pODEProblem[201] = k23, pODEProblem[202] = k60c, pODEProblem[203] = k106, pODEProblem[204] = kd8b, pODEProblem[205] = kd123, pODEProblem[206] = kd19, pODEProblem[207] = k8b, pODEProblem[208] = kd96, pODEProblem[209] = k55

	c144 = 0.0 
	c432 = 0.0 
	c395 = 0.0 
	c513 = 0.0 
	c466 = 0.0 
	c392 = 0.0 
	c91 = 0.0 
	c165 = 0.0 
	c263 = 0.0 
	c41 = 71131.2 
	c416 = 0.0 
	c257 = 0.0 
	c511 = 0.0 
	c282 = 0.0 
	c504 = 0.0 
	c58 = 0.0 
	c2 = 0.0 
	c163 = 0.0 
	c128 = 0.0 
	c227 = 0.0 
	c453 = 0.0 
	c310 = 0.0 
	c320 = 0.0 
	c487 = 0.0 
	c12 = 4498.73 
	c307 = 0.0 
	c390 = 0.0 
	c166 = 0.0 
	c96 = 0.0 
	c371 = 0.0 
	c175 = 0.0 
	c81 = 0.0 
	c529 = 0.0 
	c122 = 0.0 
	c495 = 0.0 
	c44 = 50000.0 
	c530 = 0.0 
	c182 = 0.0 
	c80 = 0.0 
	c223 = 0.0 
	c302 = 0.0 
	c37 = 0.0 
	c289 = 0.0 
	c526 = 0.0 
	c255 = 0.0 
	c102 = 0.0 
	c425 = 0.0 
	c281 = 0.0 
	c501 = 0.0 
	c348 = 0.0 
	c158 = 0.0 
	c189 = 0.0 
	c366 = 0.0 
	c305 = 0.0 
	c116 = 0.0 
	c190 = 0.0 
	c42 = 0.0 
	c457 = 0.0 
	c410 = 0.0 
	c493 = 0.0 
	c76 = 0.0 
	c463 = 1.0e6 
	c444 = 393639.0 
	c38 = 0.0 
	c17 = 0.0 
	c420 = 0.0 
	c210 = 0.0 
	c159 = 0.0 
	c385 = 0.0 
	c439 = 0.0 
	c370 = 0.0 
	c336 = 0.0 
	c11 = 0.0 
	c226 = 0.0 
	c314 = 0.0 
	c450 = 0.0 
	c127 = 0.0 
	c219 = 0.0 
	c98 = 0.0 
	c247 = 0.0 
	c64 = 0.0 
	c101 = 0.0 
	c315 = 0.0 
	c330 = 0.0 
	c482 = 0.0 
	c267 = 0.0 
	c142 = 0.0 
	c343 = 0.0 
	c123 = 0.0 
	c69 = 0.0 
	c60 = 16870.2 
	c169 = 0.0 
	c253 = 0.0 
	c404 = 0.0 
	c552 = 0.0 
	c104 = 0.0 
	c114 = 0.0 
	c203 = 0.0 
	c94 = 0.0 
	c520 = 0.0 
	c36 = 0.0 
	c434 = 0.0 
	c364 = 0.0 
	c243 = 0.0 
	c555 = 0.0 
	c99 = 0.0 
	c424 = 0.0 
	c360 = 0.0 
	c156 = 0.0 
	c157 = 0.0 
	c313 = 0.0 
	c181 = 0.0 
	c440 = 0.0 
	c18 = 0.0 
	c264 = 0.0 
	c131 = 0.0 
	c489 = 0.0 
	c218 = 0.0 
	c300 = 0.0 
	c108 = 0.0 
	c137 = 0.0 
	c507 = 0.0 
	c95 = 0.0 
	c232 = 0.0 
	c465 = 0.0 
	c321 = 0.0 
	c229 = 0.0 
	c86 = 0.0 
	c377 = 0.0 
	c222 = 0.0 
	c230 = 0.0 
	c347 = 0.0 
	c344 = 0.0 
	c149 = 0.0 
	c522 = 0.0 
	c106 = 0.0 
	c280 = 70000.0 
	c214 = 0.0 
	c550 = 0.0 
	c396 = 0.0 
	c409 = 0.0 
	c211 = 0.0 
	c57 = 0.0 
	c215 = 0.0 
	c7 = 0.0 
	c306 = 0.0 
	c151 = 0.0 
	c82 = 0.0 
	c148 = 0.0 
	c557 = 0.0 
	c361 = 0.0 
	c49 = 0.0 
	c473 = 0.0 
	c388 = 0.0 
	c92 = 0.0 
	c231 = 0.0 
	c192 = 0.0 
	c496 = 0.0 
	c153 = 0.0 
	c309 = 0.0 
	c237 = 0.0 
	c356 = 0.0 
	c183 = 0.0 
	c521 = 0.0 
	c475 = 0.0 
	c115 = 0.0 
	c193 = 0.0 
	c294 = 0.0 
	c452 = 0.0 
	c77 = 0.0 
	c207 = 0.0 
	c217 = 0.0 
	c422 = 0.0 
	c202 = 0.0 
	c10 = 0.0 
	c71 = 0.0 
	c462 = 0.0 
	c252 = 0.0 
	c63 = 0.0 
	c23 = 0.0 
	c55 = 695000.0 
	c296 = 0.0 
	c30 = 8.8914e7 
	c20 = 0.0 
	c54 = 0.0 
	c111 = 0.0 
	c331 = 0.0 
	c349 = 0.0 
	c113 = 450000.0 
	c411 = 0.0 
	c204 = 0.0 
	c259 = 0.0 
	c239 = 0.0 
	c171 = 0.0 
	c240 = 0.0 
	c368 = 0.0 
	c248 = 0.0 
	c418 = 0.0 
	c194 = 0.0 
	c464 = 0.0 
	c312 = 0.0 
	c242 = 0.0 
	c297 = 0.0 
	c431 = 0.0 
	c415 = 0.0 
	c47 = 3.02e6 
	c133 = 0.0 
	c168 = 0.0 
	c34 = 0.0 
	c249 = 0.0 
	c25 = 0.0 
	c359 = 0.0 
	c503 = 0.0 
	c398 = 0.0 
	c502 = 0.0 
	c24 = 0.0 
	c523 = 0.0 
	c532 = 0.0 
	c3 = 0.0 
	c428 = 0.0 
	c209 = 0.0 
	c167 = 0.0 
	c185 = 0.0 
	c427 = 0.0 
	c332 = 0.0 
	c436 = 0.0 
	c379 = 0.0 
	c403 = 0.0 
	c235 = 0.0 
	c394 = 0.0 
	c33 = 0.0 
	c225 = 0.0 
	c383 = 0.0 
	c83 = 0.0 
	c105 = 1.2e9 
	c87 = 0.0 
	c442 = 0.0 
	c245 = 0.0 
	c455 = 0.0 
	c191 = 0.0 
	c468 = 0.0 
	c206 = 0.0 
	c363 = 0.0 
	c152 = 0.0 
	c279 = 56100.9 
	c59 = 0.0 
	c201 = 0.0 
	c556 = 0.0 
	c558 = 0.0 
	c476 = 0.0 
	c346 = 0.0 
	c471 = 0.0 
	c399 = 0.0 
	c488 = 0.0 
	c393 = 0.0 
	c419 = 0.0 
	c265 = 0.0 
	c79 = 0.0 
	c467 = 0.0 
	c262 = 0.0 
	c484 = 0.0 
	c456 = 0.0 
	c75 = 0.0 
	c486 = 0.0 
	c129 = 0.0 
	c525 = 0.0 
	c384 = 0.0 
	c402 = 0.0 
	c246 = 0.0 
	c221 = 0.0 
	c417 = 0.0 
	c491 = 0.0 
	c50 = 0.0 
	c208 = 0.0 
	c236 = 0.0 
	c376 = 0.0 
	c266 = 0.0 
	c6 = 0.0 
	c407 = 0.0 
	c510 = 0.0 
	c103 = 0.0 
	c244 = 0.0 
	c479 = 0.0 
	c132 = 0.0 
	c375 = 0.0 
	c492 = 0.0 
	c519 = 0.0 
	c85 = 0.0 
	c499 = 0.0 
	c485 = 0.0 
	c299 = 0.0 
	c446 = 0.0 
	c500 = 0.0 
	c241 = 0.0 
	c46 = 0.0 
	c173 = 0.0 
	c89 = 0.0 
	c517 = 0.0 
	c387 = 0.0 
	c372 = 0.0 
	c172 = 0.0 
	c353 = 0.0 
	c480 = 0.0 
	c380 = 0.0 
	c469 = 0.0 
	c483 = 0.0 
	c48 = 0.0 
	c19 = 0.0 
	c195 = 0.0 
	c381 = 0.0 
	c213 = 0.0 
	c160 = 0.0 
	c308 = 0.0 
	c391 = 0.0 
	c170 = 0.0 
	c317 = 0.0 
	c90 = 0.0 
	c516 = 0.0 
	c139 = 0.0 
	c136 = 0.0 
	c303 = 0.0 
	c9 = 0.0 
	c39 = 0.0 
	c373 = 0.0 
	c260 = 0.0 
	c508 = 0.0 
	c62 = 0.0 
	c126 = 0.0 
	c197 = 0.0 
	c21 = 0.0 
	c506 = 0.0 
	c426 = 94868.3 
	c518 = 0.0 
	c180 = 0.0 
	c31 = 1.1e6 
	c84 = 0.0 
	c65 = 0.0 
	c408 = 0.0 
	c340 = 0.0 
	c497 = 0.0 
	c35 = 0.0 
	c401 = 0.0 
	c14 = 534751.0 
	c429 = 0.0 
	c205 = 0.0 
	c135 = 0.0 
	c386 = 0.0 
	c220 = 0.0 
	c472 = 0.0 
	c150 = 0.0 
	c196 = 0.0 
	c358 = 0.0 
	c478 = 0.0 
	c27 = 0.0 
	c357 = 0.0 
	c254 = 0.0 
	c286 = 0.0 
	c460 = 0.0 
	c430 = 0.0 
	c45 = 0.0 
	c147 = 0.0 
	c284 = 0.0 
	c494 = 0.0 
	c291 = 0.0 
	c339 = 0.0 
	c354 = 0.0 
	c216 = 0.0 
	c28 = 0.0 
	c400 = 0.0 
	c319 = 0.0 
	c70 = 0.0 
	c72 = 0.0 
	c8 = 0.0 
	c93 = 0.0 
	c13 = 0.0 
	c112 = 0.0 
	c198 = 0.0 
	c51 = 0.0 
	c67 = 0.0 
	c74 = 0.0 
	c16 = 0.0 
	c138 = 0.0 
	c22 = 1264.91 
	c323 = 0.0 
	c338 = 0.0 
	c367 = 0.0 
	c382 = 0.0 
	c268 = 0.0 
	c141 = 462000.0 
	c124 = 0.0 
	c448 = 0.0 
	c447 = 0.0 
	c374 = 0.0 
	c509 = 0.0 
	c52 = 0.0 
	c301 = 0.0 
	c551 = 0.0 
	c228 = 0.0 
	c88 = 0.0 
	c362 = 0.0 
	c125 = 0.0 
	c490 = 0.0 
	c421 = 0.0 
	c61 = 0.0 
	c365 = 0.0 
	c162 = 0.0 
	c68 = 0.0 
	c474 = 0.0 
	c130 = 0.0 
	c66 = 0.0 
	c412 = 0.0 
	c161 = 0.0 
	c324 = 0.0 
	c164 = 0.0 
	c15 = 0.0 
	c528 = 0.0 
	c389 = 0.0 
	c224 = 0.0 
	c449 = 0.0 
	c435 = 0.0 
	c337 = 0.0 
	c154 = 0.0 
	c143 = 794.0 
	c481 = 0.0 
	c311 = 0.0 
	c26 = 58095.2 
	c184 = 0.0 
	c355 = 0.0 
	c531 = 1.08e6 
	c117 = 0.0 
	c341 = 0.0 
	c53 = 124480.0 
	c512 = 0.0 
	c4 = 0.0 
	c405 = 0.0 
	c73 = 0.0 
	c145 = 0.0 
	c199 = 0.0 
	c238 = 0.0 
	c350 = 0.0 
	c233 = 0.0 
	c5 = 0.0 
	c454 = 0.0 
	c438 = 0.0 
	c287 = 3.55656e7 
	c97 = 0.0 
	c258 = 0.0 
	c304 = 0.0 
	c250 = 0.0 
	c283 = 0.0 
	c335 = 0.0 
	c146 = 0.0 
	c269 = 0.0 
	c288 = 0.0 
	c322 = 0.0 
	c461 = 2213.59 
	c351 = 0.0 
	c176 = 0.0 
	c325 = 0.0 
	c251 = 0.0 
	c56 = 0.0 
	c316 = 0.0 
	c451 = 0.0 
	c369 = 0.0 
	c78 = 0.0 
	c212 = 0.0 
	c174 = 0.0 
	c477 = 0.0 
	c200 = 0.0 
	c121 = 0.0 
	c437 = 0.0 
	c261 = 0.0 
	c445 = 0.0 
	c100 = 0.0 
	c470 = 0.0 
	c109 = 3.00416e8 
	c553 = 0.0 
	c397 = 0.0 
	c290 = 0.0 
	c234 = 0.0 
	c554 = 0.0 
	c293 = 0.0 
	c140 = 6230.0 
	c524 = 0.0 
	c155 = 0.0 
	c134 = 0.0 
	c527 = 0.0 
	c378 = 0.0 
	c505 = 0.0 
	c40 = 0.0 
	c318 = 0.0 
	c32 = 0.0 
	c256 = 0.0 
	c43 = 0.0 
	c498 = 0.0 
	c107 = 905000.0 
	c345 = 0.0 
	c29 = 0.0 
	c110 = 0.0 
	c433 = 0.0 

	 return [c144, c432, c395, c513, c466, c392, c91, c165, c263, c41, c416, c257, c511, c282, c504, c58, c2, c163, c128, c227, c453, c310, c320, c487, c12, c307, c390, c166, c96, c371, c175, c81, c529, c122, c495, c44, c530, c182, c80, c223, c302, c37, c289, c526, c255, c102, c425, c281, c501, c348, c158, c189, c366, c305, c116, c190, c42, c457, c410, c493, c76, c463, c444, c38, c17, c420, c210, c159, c385, c439, c370, c336, c11, c226, c314, c450, c127, c219, c98, c247, c64, c101, c315, c330, c482, c267, c142, c343, c123, c69, c60, c169, c253, c404, c552, c104, c114, c203, c94, c520, c36, c434, c364, c243, c555, c99, c424, c360, c156, c157, c313, c181, c440, c18, c264, c131, c489, c218, c300, c108, c137, c507, c95, c232, c465, c321, c229, c86, c377, c222, c230, c347, c344, c149, c522, c106, c280, c214, c550, c396, c409, c211, c57, c215, c7, c306, c151, c82, c148, c557, c361, c49, c473, c388, c92, c231, c192, c496, c153, c309, c237, c356, c183, c521, c475, c115, c193, c294, c452, c77, c207, c217, c422, c202, c10, c71, c462, c252, c63, c23, c55, c296, c30, c20, c54, c111, c331, c349, c113, c411, c204, c259, c239, c171, c240, c368, c248, c418, c194, c464, c312, c242, c297, c431, c415, c47, c133, c168, c34, c249, c25, c359, c503, c398, c502, c24, c523, c532, c3, c428, c209, c167, c185, c427, c332, c436, c379, c403, c235, c394, c33, c225, c383, c83, c105, c87, c442, c245, c455, c191, c468, c206, c363, c152, c279, c59, c201, c556, c558, c476, c346, c471, c399, c488, c393, c419, c265, c79, c467, c262, c484, c456, c75, c486, c129, c525, c384, c402, c246, c221, c417, c491, c50, c208, c236, c376, c266, c6, c407, c510, c103, c244, c479, c132, c375, c492, c519, c85, c499, c485, c299, c446, c500, c241, c46, c173, c89, c517, c387, c372, c172, c353, c480, c380, c469, c483, c48, c19, c195, c381, c213, c160, c308, c391, c170, c317, c90, c516, c139, c136, c303, c9, c39, c373, c260, c508, c62, c126, c197, c21, c506, c426, c518, c180, c31, c84, c65, c408, c340, c497, c35, c401, c14, c429, c205, c135, c386, c220, c472, c150, c196, c358, c478, c27, c357, c254, c286, c460, c430, c45, c147, c284, c494, c291, c339, c354, c216, c28, c400, c319, c70, c72, c8, c93, c13, c112, c198, c51, c67, c74, c16, c138, c22, c323, c338, c367, c382, c268, c141, c124, c448, c447, c374, c509, c52, c301, c551, c228, c88, c362, c125, c490, c421, c61, c365, c162, c68, c474, c130, c66, c412, c161, c324, c164, c15, c528, c389, c224, c449, c435, c337, c154, c143, c481, c311, c26, c184, c355, c531, c117, c341, c53, c512, c4, c405, c73, c145, c199, c238, c350, c233, c5, c454, c438, c287, c97, c258, c304, c250, c283, c335, c146, c269, c288, c322, c461, c351, c176, c325, c251, c56, c316, c451, c369, c78, c212, c174, c477, c200, c121, c437, c261, c445, c100, c470, c109, c553, c397, c290, c234, c554, c293, c140, c524, c155, c134, c527, c378, c505, c40, c318, c32, c256, c43, c498, c107, c345, c29, c110, c433]
end

function compute_σ(u::AbstractVector, t::Real, θ_sd::AbstractVector, θ_dynamic::AbstractVector, θ_nonDynamic::AbstractVector, 
                   parameterInfo::ParametersInfo, observableId::Symbol, parameterMap::θObsOrSdParameterMap)::Real 
	if observableId == :AKT_PP 
		noiseParameter1_AKT_PP = getObsOrSdParam(θ_sd, parameterMap)
		return noiseParameter1_AKT_PP 
	end

	if observableId == :ERB_B1_P_tot 
		noiseParameter1_ERB_B1_P_tot = getObsOrSdParam(θ_sd, parameterMap)
		return noiseParameter1_ERB_B1_P_tot 
	end

	if observableId == :ERK_PP 
		noiseParameter1_ERK_PP = getObsOrSdParam(θ_sd, parameterMap)
		return noiseParameter1_ERK_PP 
	end

end